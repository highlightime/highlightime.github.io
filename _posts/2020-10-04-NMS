# Non-Maximum Suppression

중복 제거의 목적
1. 연산량의 감소
2. mAP 증가

# Using in Canny edge detector

현재 픽셀을 기준으로 주변의 픽셀과 비교했을때 최대값인 경우 그대로, 아닐 경우 억제/제거

# Using in Object detection

한 물체에 바운딩 박스가 여러개 그려지는 경우 제거

``` python
def non_max_suppression(img, D):
  M, N = img.shape
  Z = np.zeros((M,N), dtype=np.int32) angle = D * 180. / np.pi angle[angle < 0] += 180
  for i in range(1, M-1):
    for j in range(1, N-1):
     try:
      q = 255
      r = 255
      
      # angle 0
      if (0 <= angle[i, j] < 22.5) or (157.5 <= angle[i, j] <= 180):
        q = img[i, j+1]
        r = img[i, j-1] 
      #angle 45
      elif (22.5 <= angle[i,j] < 67.5):
        q = img[i+1, j-1]
        r = img[i-1, j+1]
      #angle 90
      elif (67.5 <= angle[i,j] < 112.5):
        q = img[i+1, j]
        r = img[i-1, j] 
      #angle 135
      elif (112.5 <= angle[i,j] < 157.5): 
        q = img[i-1, j-1]
        r = img[i+1, j+1]
      if (img[i,j] >= q) and (img[i,j] >= r): 
        Z[i,j] = img[i,j]
      else:
        Z[i,j] = 0
     except IndexError as e:
            pass
return Z
```
